/*
 * uart.h
 *
 *  Created on: Oct 7, 2022
 *      Author: Ahmed
 */

#ifndef UART_H_
#define UART_H_


#include "std_types.h"

/*******************************************************************************
 *                      user defined data-types                                *
 *******************************************************************************/

typedef enum{
	DISABLE,EVEN=2,ODD=3
}PARITY_MODE;

typedef enum{
	ONE,TWO
}STOP_BIT_SELECT;

typedef enum{
	FIVE,SIX,SEVEN,EIGHT,NINE=7
}DATA_BIT;

typedef struct{
	PARITY_MODE parity_mode;
	STOP_BIT_SELECT stop_bit;
	DATA_BIT data_bits;
	uint32 baud_rate;
}UART_CONFIGURATION;

/*******************************************************************************
 *                      Functions Prototypes                                   *
 *******************************************************************************/

/*
 * Description :
 * Functional responsible for Initialize the UART device by:
 * 1. Setup the Frame format like number of data bits, parity bit type and number of stop bits.
 * 2. Enable the UART.
 * 3. Setup the UART baud rate.
 */
void UART_init(UART_CONFIGURATION* uart_Config);

/*
 * Description :
 * Functional responsible for send byte to another UART device.
 */
void UART_sendByte(const uint8 data);

/*
 * Description :
 * Functional responsible for receive byte from another UART device.
 */
uint8 UART_recieveByte(void);

/*
 * Description :
 * Send the required string through UART to the other UART device.
 */
void UART_sendString(const uint8 *Str);

/*
 * Description :
 * Receive the required string until the '#' symbol through UART from the other UART device.
 */
void UART_receiveString(uint8 *Str); // Receive until #


#endif /* UART_H_ */
